{"ast":null,"code":"var _jsxFileName = \"/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/ScorePage.js\";\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScorePage({\n  responses,\n  jsonData\n}) {\n  const goodPoints = [];\n  const improvementPoints = [];\n  jsonData.layers.forEach(layer => {\n    layer.topics.forEach(topic => {\n      topic.subtopics.forEach(subtopic => {\n        subtopic.questions.forEach(q => {\n          const response = responses[q.question];\n          if (response === 'Yes') {\n            goodPoints.push(...q.good_points);\n          } else {\n            improvementPoints.push(...q.improvement_points);\n          }\n        });\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Score: \", goodPoints.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Good Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: goodPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: point\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Areas for Improvement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: improvementPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: point\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = ScorePage;\nexport default ScorePage;\nvar _c;\n$RefreshReg$(_c, \"ScorePage\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","ScorePage","responses","jsonData","goodPoints","improvementPoints","layers","forEach","layer","topics","topic","subtopics","subtopic","questions","q","response","question","push","good_points","improvement_points","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","point","index","_c","$RefreshReg$"],"sources":["/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/ScorePage.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction ScorePage({ responses, jsonData }) {\n  const goodPoints = [];\n  const improvementPoints = [];\n\n  jsonData.layers.forEach(layer => {\n    layer.topics.forEach(topic => {\n      topic.subtopics.forEach(subtopic => {\n        subtopic.questions.forEach(q => {\n          const response = responses[q.question];\n          if (response === 'Yes') {\n            goodPoints.push(...q.good_points);\n          } else {\n            improvementPoints.push(...q.improvement_points);\n          }\n        });\n      });\n    });\n  });\n\n  return (\n    <div>\n      <h2>Score</h2>\n      <p>Total Score: {goodPoints.length}</p>\n      <h3>Good Points</h3>\n      <ul>\n        {goodPoints.map((point, index) => (\n          <li key={index}>{point}</li>\n        ))}\n      </ul>\n      <h3>Areas for Improvement</h3>\n      <ul>\n        {improvementPoints.map((point, index) => (\n          <li key={index}>{point}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ScorePage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAC1C,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,iBAAiB,GAAG,EAAE;EAE5BF,QAAQ,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;IAC/BA,KAAK,CAACC,MAAM,CAACF,OAAO,CAACG,KAAK,IAAI;MAC5BA,KAAK,CAACC,SAAS,CAACJ,OAAO,CAACK,QAAQ,IAAI;QAClCA,QAAQ,CAACC,SAAS,CAACN,OAAO,CAACO,CAAC,IAAI;UAC9B,MAAMC,QAAQ,GAAGb,SAAS,CAACY,CAAC,CAACE,QAAQ,CAAC;UACtC,IAAID,QAAQ,KAAK,KAAK,EAAE;YACtBX,UAAU,CAACa,IAAI,CAAC,GAAGH,CAAC,CAACI,WAAW,CAAC;UACnC,CAAC,MAAM;YACLb,iBAAiB,CAACY,IAAI,CAAC,GAAGH,CAAC,CAACK,kBAAkB,CAAC;UACjD;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdxB,OAAA;MAAAoB,QAAA,GAAG,eAAa,EAAChB,UAAU,CAACqB,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCxB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA;MAAAoB,QAAA,EACGhB,UAAU,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC3B5B,OAAA;QAAAoB,QAAA,EAAiBO;MAAK,GAAbC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLxB,OAAA;MAAAoB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BxB,OAAA;MAAAoB,QAAA,EACGf,iBAAiB,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAClC5B,OAAA;QAAAoB,QAAA,EAAiBO;MAAK,GAAbC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACK,EAAA,GArCQ5B,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}