{"ast":null,"code":"var _jsxFileName = \"/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/Questionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Questionnaire.css\";\nimport { db } from \"../firebase/firebase.js\";\nimport { collection, doc, setDoc, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionnairePage() {\n  _s();\n  const [data, setData] = useState(null);\n  const [currentLayerIndex, setLayerIndex] = useState(0);\n  const [currentTopicIndex, setTopicIndex] = useState(0);\n  const [currentSubtopicIndex, setSubtopicIndex] = useState(0);\n  const [currentSectionIndex, setSectionIndex] = useState(0);\n  const [responses, setResponses] = useState({});\n  const navigate = useNavigate();\n\n  // Add JSON data to Firestore if it's empty\n  const addDataToFirestore = async jsonData => {\n    try {\n      const layers = jsonData.layers;\n      for (let i = 0; i < layers.length; i++) {\n        const layer = layers[i];\n        const layerRef = doc(collection(db, \"layers\"), layer.name);\n        await setDoc(layerRef, {\n          name: layer.name,\n          order: i\n        });\n        for (let j = 0; j < layer.topics.length; j++) {\n          const topic = layer.topics[j];\n          const topicRef = doc(collection(layerRef, \"topics\"), topic.name);\n          await setDoc(topicRef, {\n            name: topic.name,\n            order: j\n          });\n          for (let k = 0; k < topic.subtopics.length; k++) {\n            const subtopic = topic.subtopics[k];\n            const subtopicRef = doc(collection(topicRef, \"subtopics\"), subtopic.name);\n            await setDoc(subtopicRef, {\n              name: subtopic.name,\n              order: k\n            });\n            for (let l = 0; l < subtopic.sections.length; l++) {\n              const section = subtopic.sections[l];\n              const sectionRef = doc(collection(subtopicRef, \"sections\"), section.name);\n              await setDoc(sectionRef, {\n                name: section.name,\n                order: l\n              });\n              for (let m = 0; m < section.questions.length; m++) {\n                const question = section.questions[m];\n                const questionRef = doc(collection(sectionRef, \"questions\"), question.name);\n                await setDoc(questionRef, {\n                  name: question.name,\n                  info: question.info,\n                  good_point: question.good_point,\n                  scope_for_improvement: question.scope_for_improvement,\n                  mandatory: question.mandatory,\n                  tags: question.tags,\n                  order: m\n                });\n              }\n            }\n          }\n        }\n      }\n      console.log(\"Data successfully added to Firestore!\");\n    } catch (error) {\n      console.error(\"Error adding data to Firestore:\", error);\n    }\n  };\n\n  // Fetch Firestore data\n  const fetchFirestoreData = async () => {\n    try {\n      const layersSnapshot = await getDocs(collection(db, \"layers\"));\n      const fetchedData = await getFirestoreData(layersSnapshot);\n      setData(fetchedData);\n    } catch (error) {\n      console.error(\"Error fetching Firestore data:\", error);\n    }\n  };\n\n  // Helper function to structure Firestore data\n  const getFirestoreData = async layersSnapshot => {\n    const layers = [];\n    for (const layerDoc of layersSnapshot.docs) {\n      const layerData = layerDoc.data();\n      const topicsSnapshot = await getDocs(collection(layerDoc.ref, \"topics\"));\n      const topics = [];\n      for (const topicDoc of topicsSnapshot.docs) {\n        const topicData = topicDoc.data();\n        const subtopicsSnapshot = await getDocs(collection(topicDoc.ref, \"subtopics\"));\n        const subtopics = [];\n        for (const subtopicDoc of subtopicsSnapshot.docs) {\n          const subtopicData = subtopicDoc.data();\n          const sectionsSnapshot = await getDocs(collection(subtopicDoc.ref, \"sections\"));\n          const sections = [];\n          for (const sectionDoc of sectionsSnapshot.docs) {\n            const sectionData = sectionDoc.data();\n            const questionsSnapshot = await getDocs(collection(sectionDoc.ref, \"questions\"));\n            const questions = questionsSnapshot.docs.map(doc => doc.data()).sort((a, b) => a.order - b.order);\n            sections.push({\n              ...sectionData,\n              questions\n            });\n          }\n          sections.sort((a, b) => a.order - b.order);\n          subtopics.push({\n            ...subtopicData,\n            sections\n          });\n        }\n        subtopics.sort((a, b) => a.order - b.order);\n        topics.push({\n          ...topicData,\n          subtopics\n        });\n      }\n      topics.sort((a, b) => a.order - b.order);\n      layers.push({\n        ...layerData,\n        topics\n      });\n    }\n    layers.sort((a, b) => a.order - b.order);\n    return {\n      layers\n    };\n  };\n\n  // Check if Firebase is empty and initialize data\n  useEffect(() => {\n    const initializeData = async () => {\n      const layersSnapshot = await getDocs(collection(db, \"layers\"));\n      if (layersSnapshot.empty) {\n        console.log(\"Firestore is empty, adding default JSON data...\");\n        const jsonData = {}; // Replace with your JSON data\n        await addDataToFirestore(jsonData);\n      } else {\n        console.log(\"Fetching data from Firestore...\");\n        await fetchFirestoreData();\n      }\n    };\n    initializeData();\n  }, []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 21\n  }, this);\n  const layer = data.layers[currentLayerIndex];\n  const topic = layer.topics[currentTopicIndex];\n  const subtopic = topic.subtopics[currentSubtopicIndex];\n  const section = subtopic.sections[currentSectionIndex];\n  const handleResponseChange = (questionName, answer) => {\n    setResponses(prevResponses => ({\n      ...prevResponses,\n      [questionName]: answer\n    }));\n  };\n  const handleNext = () => {\n    if (currentSectionIndex < subtopic.sections.length - 1) {\n      setSectionIndex(currentSectionIndex + 1);\n    } else if (currentSubtopicIndex < topic.subtopics.length - 1) {\n      setSectionIndex(0);\n      setSubtopicIndex(currentSubtopicIndex + 1);\n    } else if (currentTopicIndex < layer.topics.length - 1) {\n      setSectionIndex(0);\n      setSubtopicIndex(0);\n      setTopicIndex(currentTopicIndex + 1);\n    } else if (currentLayerIndex < data.layers.length - 1) {\n      setLayerIndex(currentLayerIndex + 1);\n      setSectionIndex(0);\n      setTopicIndex(0);\n      setSubtopicIndex(0);\n    } else {\n      console.log(\"Questionnaire completed\");\n      navigate(\"/score\", {\n        state: {\n          responses,\n          jsonData: data\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Layer: \", layer.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Topic: \", topic.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Subtopic: \", subtopic.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Section: \", section.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body\",\n      children: section.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponseChange(question.name, \"Yes\"),\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponseChange(question.name, \"No\"),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionnairePage, \"Adn2lE7OZhufgN4sAyTaTyXs6xY=\", false, function () {\n  return [useNavigate];\n});\n_c = QuestionnairePage;\nexport default QuestionnairePage;\nvar _c;\n$RefreshReg$(_c, \"QuestionnairePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","db","collection","doc","setDoc","getDocs","jsxDEV","_jsxDEV","QuestionnairePage","_s","data","setData","currentLayerIndex","setLayerIndex","currentTopicIndex","setTopicIndex","currentSubtopicIndex","setSubtopicIndex","currentSectionIndex","setSectionIndex","responses","setResponses","navigate","addDataToFirestore","jsonData","layers","i","length","layer","layerRef","name","order","j","topics","topic","topicRef","k","subtopics","subtopic","subtopicRef","l","sections","section","sectionRef","m","questions","question","questionRef","info","good_point","scope_for_improvement","mandatory","tags","console","log","error","fetchFirestoreData","layersSnapshot","fetchedData","getFirestoreData","layerDoc","docs","layerData","topicsSnapshot","ref","topicDoc","topicData","subtopicsSnapshot","subtopicDoc","subtopicData","sectionsSnapshot","sectionDoc","sectionData","questionsSnapshot","map","sort","a","b","push","initializeData","empty","children","fileName","_jsxFileName","lineNumber","columnNumber","handleResponseChange","questionName","answer","prevResponses","handleNext","state","className","index","onClick","_c","$RefreshReg$"],"sources":["/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/Questionnaire.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Questionnaire.css\";\nimport { db } from \"../firebase/firebase.js\";\nimport { collection, doc, setDoc, getDocs } from \"firebase/firestore\";\n\nfunction QuestionnairePage() {\n  const [data, setData] = useState(null);\n  const [currentLayerIndex, setLayerIndex] = useState(0);\n  const [currentTopicIndex, setTopicIndex] = useState(0);\n  const [currentSubtopicIndex, setSubtopicIndex] = useState(0);\n  const [currentSectionIndex, setSectionIndex] = useState(0);\n  const [responses, setResponses] = useState({});\n  const navigate = useNavigate();\n\n  // Add JSON data to Firestore if it's empty\n  const addDataToFirestore = async (jsonData) => {\n    try {\n      const layers = jsonData.layers;\n      for (let i = 0; i < layers.length; i++) {\n        const layer = layers[i];\n        const layerRef = doc(collection(db, \"layers\"), layer.name);\n        await setDoc(layerRef, { name: layer.name, order: i });\n\n        for (let j = 0; j < layer.topics.length; j++) {\n          const topic = layer.topics[j];\n          const topicRef = doc(collection(layerRef, \"topics\"), topic.name);\n          await setDoc(topicRef, { name: topic.name, order: j });\n\n          for (let k = 0; k < topic.subtopics.length; k++) {\n            const subtopic = topic.subtopics[k];\n            const subtopicRef = doc(collection(topicRef, \"subtopics\"), subtopic.name);\n            await setDoc(subtopicRef, { name: subtopic.name, order: k });\n\n            for (let l = 0; l < subtopic.sections.length; l++) {\n              const section = subtopic.sections[l];\n              const sectionRef = doc(collection(subtopicRef, \"sections\"), section.name);\n              await setDoc(sectionRef, { name: section.name, order: l });\n\n              for (let m = 0; m < section.questions.length; m++) {\n                const question = section.questions[m];\n                const questionRef = doc(collection(sectionRef, \"questions\"), question.name);\n                await setDoc(questionRef, {\n                  name: question.name,\n                  info: question.info,\n                  good_point: question.good_point,\n                  scope_for_improvement: question.scope_for_improvement,\n                  mandatory: question.mandatory,\n                  tags: question.tags,\n                  order: m,\n                });\n              }\n            }\n          }\n        }\n      }\n      console.log(\"Data successfully added to Firestore!\");\n    } catch (error) {\n      console.error(\"Error adding data to Firestore:\", error);\n    }\n  };\n\n  // Fetch Firestore data\n  const fetchFirestoreData = async () => {\n    try {\n      const layersSnapshot = await getDocs(collection(db, \"layers\"));\n      const fetchedData = await getFirestoreData(layersSnapshot);\n      setData(fetchedData);\n    } catch (error) {\n      console.error(\"Error fetching Firestore data:\", error);\n    }\n  };\n\n  // Helper function to structure Firestore data\n  const getFirestoreData = async (layersSnapshot) => {\n    const layers = [];\n    for (const layerDoc of layersSnapshot.docs) {\n      const layerData = layerDoc.data();\n      const topicsSnapshot = await getDocs(collection(layerDoc.ref, \"topics\"));\n      const topics = [];\n      for (const topicDoc of topicsSnapshot.docs) {\n        const topicData = topicDoc.data();\n        const subtopicsSnapshot = await getDocs(collection(topicDoc.ref, \"subtopics\"));\n        const subtopics = [];\n        for (const subtopicDoc of subtopicsSnapshot.docs) {\n          const subtopicData = subtopicDoc.data();\n          const sectionsSnapshot = await getDocs(collection(subtopicDoc.ref, \"sections\"));\n          const sections = [];\n          for (const sectionDoc of sectionsSnapshot.docs) {\n            const sectionData = sectionDoc.data();\n            const questionsSnapshot = await getDocs(collection(sectionDoc.ref, \"questions\"));\n            const questions = questionsSnapshot.docs\n              .map((doc) => doc.data())\n              .sort((a, b) => a.order - b.order);\n            sections.push({ ...sectionData, questions });\n          }\n          sections.sort((a, b) => a.order - b.order);\n          subtopics.push({ ...subtopicData, sections });\n        }\n        subtopics.sort((a, b) => a.order - b.order);\n        topics.push({ ...topicData, subtopics });\n      }\n      topics.sort((a, b) => a.order - b.order);\n      layers.push({ ...layerData, topics });\n    }\n    layers.sort((a, b) => a.order - b.order);\n    return { layers };\n  };\n\n  // Check if Firebase is empty and initialize data\n  useEffect(() => {\n    const initializeData = async () => {\n      const layersSnapshot = await getDocs(collection(db, \"layers\"));\n      if (layersSnapshot.empty) {\n        console.log(\"Firestore is empty, adding default JSON data...\");\n        const jsonData = {}; // Replace with your JSON data\n        await addDataToFirestore(jsonData);\n      } else {\n        console.log(\"Fetching data from Firestore...\");\n        await fetchFirestoreData();\n      }\n    };\n\n    initializeData();\n  }, []);\n\n  if (!data) return <div>Loading...</div>;\n\n  const layer = data.layers[currentLayerIndex];\n  const topic = layer.topics[currentTopicIndex];\n  const subtopic = topic.subtopics[currentSubtopicIndex];\n  const section = subtopic.sections[currentSectionIndex];\n\n  const handleResponseChange = (questionName, answer) => {\n    setResponses((prevResponses) => ({\n      ...prevResponses,\n      [questionName]: answer,\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentSectionIndex < subtopic.sections.length - 1) {\n      setSectionIndex(currentSectionIndex + 1);\n    } else if (currentSubtopicIndex < topic.subtopics.length - 1) {\n      setSectionIndex(0);\n      setSubtopicIndex(currentSubtopicIndex + 1);\n    } else if (currentTopicIndex < layer.topics.length - 1) {\n      setSectionIndex(0);\n      setSubtopicIndex(0);\n      setTopicIndex(currentTopicIndex + 1);\n    } else if (currentLayerIndex < data.layers.length - 1) {\n      setLayerIndex(currentLayerIndex + 1);\n      setSectionIndex(0);\n      setTopicIndex(0);\n      setSubtopicIndex(0);\n    } else {\n      console.log(\"Questionnaire completed\");\n      navigate(\"/score\", { state: { responses, jsonData: data } });\n    }\n  };\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-header\">\n        <h2>Layer: {layer.name}</h2>\n        <h3>Topic: {topic.name}</h3>\n        <h4>Subtopic: {subtopic.name}</h4>\n        <h5>Section: {section.name}</h5>\n      </div>\n\n      <div className=\"panel-body\">\n        {section.questions.map((question, index) => (\n          <div key={index} className=\"question-panel\">\n            <p><strong>{question.name}</strong></p>\n            <div className=\"buttons\">\n              <button onClick={() => handleResponseChange(question.name, \"Yes\")}>\n                Yes\n              </button>\n              <button onClick={() => handleResponseChange(question.name, \"No\")}>\n                No\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button className=\"next-button\" onClick={handleNext}>\n        Next\n      </button>\n    </div>\n  );\n}\n\nexport default QuestionnairePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}