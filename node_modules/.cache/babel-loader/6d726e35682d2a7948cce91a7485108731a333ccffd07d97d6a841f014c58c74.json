{"ast":null,"code":"var _jsxFileName = \"/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/Questionnaire.js\",\n  _s = $RefreshSig$();\n// src/components/QuestionnairePage.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionnairePage() {\n  _s();\n  const [data, setData] = useState(null);\n  const [currentLayerIndex, setLayerIndex] = useState(0);\n  const [currentTopicIndex, setTopicIndex] = useState(0);\n  const [currentSubtopicIndex, setSubtopicIndex] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  useEffect(() => {\n    fetch('/questionnaireData.json').then(response => response.json()).then(data => setData(data)).catch(error => console.error(\"Error loading JSON data:\", error));\n  }, []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 21\n  }, this);\n  const layer = data.layers[currentLayerIndex];\n  const topic = layer.topics[currentTopicIndex];\n  const subtopic = topic.subtopics[currentSubtopicIndex];\n  const currentQuestion = subtopic.questions[currentQuestionIndex];\n  const handleNext = () => {\n    // Update indices here to move to the next subtopic or topic\n    const currentLayer = data.layers[currentLayerIndex];\n    const currentTopic = currentLayer.topics[currentTopicIndex];\n    const currentSubtopic = currentTopic.subtopics[currentSubtopicIndex];\n    // Check if there are more questions in the current subtopic\n    if (currentQuestionIndex < currentSubtopic.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n    // If no more questions in the subtopic, move to next subtopic\n    else if (currentSubtopicIndex < currentTopic.subtopics.length - 1) {\n      setCurrentQuestionIndex(0);\n      setSubtopicIndex(currentSubtopicIndex + 1);\n    }\n    // If no more subtopics, move to next topic\n    else if (currentTopicIndex < currentLayer.topics.length - 1) {\n      setCurrentQuestionIndex(0);\n      setSubtopicIndex(0);\n      setTopicIndex(currentTopicIndex + 1);\n    }\n    // If no more topics, move to next layer\n    else if (currentLayerIndex < data.layers.length - 1) {\n      setCurrentQuestionIndex(0);\n      setSubtopicIndex(0);\n      setTopicIndex(0);\n      setLayerIndex(currentLayerIndex + 1);\n    }\n    // If reached the end of all layers, handle completion\n    else {\n      console.log(\"Questionnaire completed\");\n    }\n\n    // Check if there are more subtopics in the current topic\n    // if (currentSubtopicIndex < currentTopic.subtopics.length - 1) {\n    //   setSubtopicIndex(currentSubtopicIndex + 1);\n    // } \n    // // If there are no more subtopics, check if there are more topics in the current layer\n    // else if (currentTopicIndex < currentLayer.topics.length - 1) {\n    //   setSubtopicIndex(0); // reset subtopic index\n    //   setTopicIndex(currentTopicIndex + 1);\n    // } \n    // // If there are no more topics, check if there are more layers\n    // else if (currentLayerIndex < data.layers.length - 1) {\n    //   setSubtopicIndex(0); // reset subtopic index\n    //   setTopicIndex(0); // reset topic index\n    //   setLayerIndex(currentLayerIndex + 1);\n    // } \n    // // If we've reached the last subtopic of the last topic in the last layer, optionally handle completion\n    // else {\n    //   console.log('Questionnaire completed');\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Layer: \", layer.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Topic: \", topic.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Subtopic: \", subtopic.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), currentQuestion.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n\n  // return (\n  //   <div>\n  //     <h2>Layer: {data.layers[currentLayerIndex].name}</h2>\n  //     <h3>Topic: {data.layers[currentLayerIndex].topics[currentTopicIndex].name}</h3>\n  //     <h4>Subtopic: {data.layers[currentLayerIndex].topics[currentTopicIndex].subtopics[currentSubtopicIndex].name}</h4>\n  //     <div>\n  //       {data.layers[currentLayerIndex].topics[currentTopicIndex].subtopics[currentSubtopicIndex].questions.map((question, i) => (\n  //         <p key={i}>{question}</p>\n  //       ))}\n  //     </div>\n  //     <button onClick={handleNext}>Next</button>\n  //   </div>\n  // );\n  // return (\n  //   <div>\n  //     <h2>{layer.name}</h2>\n  //     <h3>{topic.name}</h3>\n  //     <h4>{subtopic.name}</h4>\n  //     {subtopic.questions.map((q, idx) => (\n  //       <div key={q.id}>\n  //         <p>{q.question}</p>\n  //         <button>Yes</button>\n  //         <button>No</button>\n  //       </div>\n  //     ))}\n  //     <button onClick={handleNext}>Next</button>\n  //   </div>\n  // );\n}\n_s(QuestionnairePage, \"n0NYhaBHGDioJLRg1tiAgVfkOPg=\");\n_c = QuestionnairePage;\nexport default QuestionnairePage;\nvar _c;\n$RefreshReg$(_c, \"QuestionnairePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuestionnairePage","_s","data","setData","currentLayerIndex","setLayerIndex","currentTopicIndex","setTopicIndex","currentSubtopicIndex","setSubtopicIndex","currentQuestionIndex","setCurrentQuestionIndex","fetch","then","response","json","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","layer","layers","topic","topics","subtopic","subtopics","currentQuestion","questions","handleNext","currentLayer","currentTopic","currentSubtopic","length","log","name","question","options","map","option","idx","onClick","_c","$RefreshReg$"],"sources":["/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/Questionnaire.js"],"sourcesContent":["// src/components/QuestionnairePage.js\nimport React, { useState, useEffect } from 'react';\n\nfunction QuestionnairePage() {\n  const [data, setData] = useState(null);\n  const [currentLayerIndex, setLayerIndex] = useState(0);\n  const [currentTopicIndex, setTopicIndex] = useState(0);\n  const [currentSubtopicIndex, setSubtopicIndex] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  useEffect(() => {\n    fetch('/questionnaireData.json')\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(error => console.error(\"Error loading JSON data:\", error));\n  }, []);\n\n  if (!data) return <div>Loading...</div>;\n\n  const layer = data.layers[currentLayerIndex];\n  const topic = layer.topics[currentTopicIndex];\n  const subtopic = topic.subtopics[currentSubtopicIndex];\n  const currentQuestion = subtopic.questions[currentQuestionIndex];\n  \n\n  const handleNext = () => {\n    // Update indices here to move to the next subtopic or topic\n    const currentLayer = data.layers[currentLayerIndex];\n    const currentTopic = currentLayer.topics[currentTopicIndex];\n    const currentSubtopic = currentTopic.subtopics[currentSubtopicIndex];\n    // Check if there are more questions in the current subtopic\n    if (currentQuestionIndex < currentSubtopic.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } \n    // If no more questions in the subtopic, move to next subtopic\n    else if (currentSubtopicIndex < currentTopic.subtopics.length - 1) {\n      setCurrentQuestionIndex(0);\n      setSubtopicIndex(currentSubtopicIndex + 1);\n    } \n    // If no more subtopics, move to next topic\n    else if (currentTopicIndex < currentLayer.topics.length - 1) {\n      setCurrentQuestionIndex(0);\n      setSubtopicIndex(0);\n      setTopicIndex(currentTopicIndex + 1);\n    } \n    // If no more topics, move to next layer\n    else if (currentLayerIndex < data.layers.length - 1) {\n      setCurrentQuestionIndex(0);\n      setSubtopicIndex(0);\n      setTopicIndex(0);\n      setLayerIndex(currentLayerIndex + 1);\n    } \n    // If reached the end of all layers, handle completion\n    else {\n      console.log(\"Questionnaire completed\");\n    }\n\n    // Check if there are more subtopics in the current topic\n    // if (currentSubtopicIndex < currentTopic.subtopics.length - 1) {\n    //   setSubtopicIndex(currentSubtopicIndex + 1);\n    // } \n    // // If there are no more subtopics, check if there are more topics in the current layer\n    // else if (currentTopicIndex < currentLayer.topics.length - 1) {\n    //   setSubtopicIndex(0); // reset subtopic index\n    //   setTopicIndex(currentTopicIndex + 1);\n    // } \n    // // If there are no more topics, check if there are more layers\n    // else if (currentLayerIndex < data.layers.length - 1) {\n    //   setSubtopicIndex(0); // reset subtopic index\n    //   setTopicIndex(0); // reset topic index\n    //   setLayerIndex(currentLayerIndex + 1);\n    // } \n    // // If we've reached the last subtopic of the last topic in the last layer, optionally handle completion\n    // else {\n    //   console.log('Questionnaire completed');\n    // }\n  };\n\n  return (\n    <div>\n      <h2>Layer: {layer.name}</h2>\n      <h3>Topic: {topic.name}</h3>\n      <h4>Subtopic: {subtopic.name}</h4>\n\n      <div>\n        <p>{currentQuestion.question}</p>\n        {currentQuestion.options.map((option, idx) => (\n          <button key={idx}>{option}</button>\n        ))}\n      </div>\n\n      <button onClick={handleNext}>Next</button>\n    </div>\n  );\n\n  // return (\n  //   <div>\n  //     <h2>Layer: {data.layers[currentLayerIndex].name}</h2>\n  //     <h3>Topic: {data.layers[currentLayerIndex].topics[currentTopicIndex].name}</h3>\n  //     <h4>Subtopic: {data.layers[currentLayerIndex].topics[currentTopicIndex].subtopics[currentSubtopicIndex].name}</h4>\n  //     <div>\n  //       {data.layers[currentLayerIndex].topics[currentTopicIndex].subtopics[currentSubtopicIndex].questions.map((question, i) => (\n  //         <p key={i}>{question}</p>\n  //       ))}\n  //     </div>\n  //     <button onClick={handleNext}>Next</button>\n  //   </div>\n  // );\n  // return (\n  //   <div>\n  //     <h2>{layer.name}</h2>\n  //     <h3>{topic.name}</h3>\n  //     <h4>{subtopic.name}</h4>\n  //     {subtopic.questions.map((q, idx) => (\n  //       <div key={q.id}>\n  //         <p>{q.question}</p>\n  //         <button>Yes</button>\n  //         <button>No</button>\n  //       </div>\n  //     ))}\n  //     <button onClick={handleNext}>Next</button>\n  //   </div>\n  // );\n}\n\nexport default QuestionnairePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}