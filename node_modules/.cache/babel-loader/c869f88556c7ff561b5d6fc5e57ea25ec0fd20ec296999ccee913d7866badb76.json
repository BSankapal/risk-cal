{"ast":null,"code":"var _jsxFileName = \"/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/Questionnaire.js\",\n  _s = $RefreshSig$();\n// src/components/QuestionnairePage.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionnairePage() {\n  _s();\n  const [data, setData] = useState(null);\n  const [currentLayerIndex, setLayerIndex] = useState(0);\n  const [currentTopicIndex, setTopicIndex] = useState(0);\n  const [currentSubtopicIndex, setSubtopicIndex] = useState(0);\n  useEffect(() => {\n    fetch('/questionnaireData.json').then(response => response.json()).then(data => setData(data)).catch(error => console.error(\"Error loading JSON data:\", error));\n  }, []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  const layer = data.layers[currentLayerIndex];\n  const topic = layer.topics[currentTopicIndex];\n  const subtopic = topic.subtopics[currentSubtopicIndex];\n  const handleNext = () => {\n    // Update indices here to move to the next subtopic or topic\n    const currentLayer = data.layers[currentLayerIndex];\n    const currentTopic = currentLayer.topics[currentTopicIndex];\n    const currentSubtopic = currentTopic.subtopics[currentSubtopicIndex];\n\n    // Check if there are more subtopics in the current topic\n    if (currentSubtopicIndex < currentTopic.subtopics.length - 1) {\n      setSubtopicIndex(currentSubtopicIndex + 1);\n    }\n    // If there are no more subtopics, check if there are more topics in the current layer\n    else if (currentTopicIndex < currentLayer.topics.length - 1) {\n      setSubtopicIndex(0); // reset subtopic index\n      setTopicIndex(currentTopicIndex + 1);\n    }\n    // If there are no more topics, check if there are more layers\n    else if (currentLayerIndex < data.layers.length - 1) {\n      setSubtopicIndex(0); // reset subtopic index\n      setTopicIndex(0); // reset topic index\n      setLayerIndex(currentLayerIndex + 1);\n    }\n    // If we've reached the last subtopic of the last topic in the last layer, optionally handle completion\n    else {\n      console.log('Questionnaire completed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: layer.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: topic.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: subtopic.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), subtopic.questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, q.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionnairePage, \"z9/nmR0m+u8tYj3eMcJAiCLdrtQ=\");\n_c = QuestionnairePage;\nexport default QuestionnairePage;\nvar _c;\n$RefreshReg$(_c, \"QuestionnairePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuestionnairePage","_s","data","setData","currentLayerIndex","setLayerIndex","currentTopicIndex","setTopicIndex","currentSubtopicIndex","setSubtopicIndex","fetch","then","response","json","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","layer","layers","topic","topics","subtopic","subtopics","handleNext","currentLayer","currentTopic","currentSubtopic","length","log","name","questions","map","q","idx","question","id","onClick","_c","$RefreshReg$"],"sources":["/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/Questionnaire.js"],"sourcesContent":["// src/components/QuestionnairePage.js\nimport React, { useState, useEffect } from 'react';\n\nfunction QuestionnairePage() {\n  const [data, setData] = useState(null);\n  const [currentLayerIndex, setLayerIndex] = useState(0);\n  const [currentTopicIndex, setTopicIndex] = useState(0);\n  const [currentSubtopicIndex, setSubtopicIndex] = useState(0);\n\n  useEffect(() => {\n    fetch('/questionnaireData.json')\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(error => console.error(\"Error loading JSON data:\", error));\n  }, []);\n\n  if (!data) return <div>Loading...</div>;\n\n  const layer = data.layers[currentLayerIndex];\n  const topic = layer.topics[currentTopicIndex];\n  const subtopic = topic.subtopics[currentSubtopicIndex];\n\n  const handleNext = () => {\n    // Update indices here to move to the next subtopic or topic\n    const currentLayer = data.layers[currentLayerIndex];\n    const currentTopic = currentLayer.topics[currentTopicIndex];\n    const currentSubtopic = currentTopic.subtopics[currentSubtopicIndex];\n\n    // Check if there are more subtopics in the current topic\n    if (currentSubtopicIndex < currentTopic.subtopics.length - 1) {\n      setSubtopicIndex(currentSubtopicIndex + 1);\n    } \n    // If there are no more subtopics, check if there are more topics in the current layer\n    else if (currentTopicIndex < currentLayer.topics.length - 1) {\n      setSubtopicIndex(0); // reset subtopic index\n      setTopicIndex(currentTopicIndex + 1);\n    } \n    // If there are no more topics, check if there are more layers\n    else if (currentLayerIndex < data.layers.length - 1) {\n      setSubtopicIndex(0); // reset subtopic index\n      setTopicIndex(0); // reset topic index\n      setLayerIndex(currentLayerIndex + 1);\n    } \n    // If we've reached the last subtopic of the last topic in the last layer, optionally handle completion\n    else {\n      console.log('Questionnaire completed');\n    }\n  };\n\n  return (\n    <div>\n      <h2>{layer.name}</h2>\n      <h3>{topic.name}</h3>\n      <h4>{subtopic.name}</h4>\n      {subtopic.questions.map((q, idx) => (\n        <div key={q.id}>\n          <p>{q.question}</p>\n          <button>Yes</button>\n          <button>No</button>\n        </div>\n      ))}\n      <button onClick={handleNext}>Next</button>\n    </div>\n  );\n}\n\nexport default QuestionnairePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}