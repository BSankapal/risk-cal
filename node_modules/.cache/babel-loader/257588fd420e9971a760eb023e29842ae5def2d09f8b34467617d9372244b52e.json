{"ast":null,"code":"var _jsxFileName = \"/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/Questionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Questionnaire.css\";\nimport { db } from \"../firebase/firebase.js\"; // Import Firestore instance\nimport { collection, doc, setDoc, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionnairePage() {\n  _s();\n  const [data, setData] = useState(null);\n  const [currentLayerIndex, setLayerIndex] = useState(0);\n  const [currentTopicIndex, setTopicIndex] = useState(0);\n  const [currentSubtopicIndex, setSubtopicIndex] = useState(0);\n  const [currentSectionIndex, setSectionIndex] = useState(0); // New state for section\n  const [responses, setResponses] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDataFromFirestore = async () => {\n      try {\n        const layersCollection = collection(db, \"layers\");\n        const layersSnapshot = await getDocs(layersCollection);\n        if (layersSnapshot.empty) {\n          console.log(\"Firestore is empty. Adding data...\");\n          // Load JSON and upload it if Firestore is empty\n          fetch(\"/questionnaireData.json\").then(response => response.json()).then(async jsonData => {\n            await addDataToFirestore(jsonData); // Add JSON to Firestore\n            setData(jsonData); // Set state with the loaded data\n          });\n        } else {\n          console.log(\"Fetching data from Firestore...\");\n          const firestoreData = await getFirestoreData(layersSnapshot);\n          setData(firestoreData); // Set state with Firestore data\n        }\n      } catch (error) {\n        console.error(\"Error fetching data from Firestore:\", error);\n      }\n    };\n    fetchDataFromFirestore();\n  }, []);\n\n  // Function to add data to Firestore\n  const addDataToFirestore = async jsonData => {\n    try {\n      const layers = jsonData.layers;\n\n      // Step 1: Create all layers first\n      for (const layer of layers) {\n        const layerRef = doc(collection(db, \"layers\"), layer.lname);\n        await setDoc(layerRef, {\n          name: layer.lname\n        });\n\n        // Step 2: Create topics under each layer\n        for (const topic of layer.topics) {\n          const topicRef = doc(collection(layerRef, \"topics\"), topic.tname);\n          await setDoc(topicRef, {\n            name: topic.tname\n          });\n\n          // Step 3: Create subtopics under each topic\n          for (const subtopic of topic.subtopics) {\n            const sanitizedSubtopicName = subtopic.stname.replace(/[^a-zA-Z0-9]/g, '_');\n            const subtopicRef = doc(collection(topicRef, \"subtopics\"), sanitizedSubtopicName);\n            await setDoc(subtopicRef, {\n              name: subtopic.stname\n            });\n\n            // Step 4: Create sections under each subtopic\n            for (const section of subtopic.sections) {\n              const sectionRef = doc(collection(subtopicRef, \"sections\"), section.sname);\n              await setDoc(sectionRef, {\n                name: section.sname\n              });\n\n              // Step 5: Create questions under each section\n              for (const question of section.questions) {\n                const questionRef = doc(collection(sectionRef, \"questions\"), question.name);\n                await setDoc(questionRef, {\n                  name: question.name,\n                  info: question.info,\n                  good_point: question.good_point,\n                  scope_for_improvement: question.scope_for_improvement,\n                  mandatory: question.mandatory,\n                  tags: question.tags\n                });\n              }\n            }\n          }\n        }\n      }\n      console.log(\"Data successfully added to Firestore!\");\n    } catch (error) {\n      console.error(\"Error adding data to Firestore:\", error);\n    }\n  };\n\n  // Function to fetch data from Firestore and build a JSON-like structure\n  const getFirestoreData = async layersSnapshot => {\n    const layers = [];\n    for (const layerDoc of layersSnapshot.docs) {\n      const topicsSnapshot = await getDocs(collection(layerDoc.ref, \"topics\"));\n      const topics = [];\n      for (const topicDoc of topicsSnapshot.docs) {\n        const subtopicsSnapshot = await getDocs(collection(topicDoc.ref, \"subtopics\"));\n        const subtopics = [];\n        for (const subtopicDoc of subtopicsSnapshot.docs) {\n          const sectionsSnapshot = await getDocs(collection(subtopicDoc.ref, \"sections\"));\n          const sections = [];\n          for (const sectionDoc of sectionsSnapshot.docs) {\n            const questionsSnapshot = await getDocs(collection(sectionDoc.ref, \"questions\"));\n            const questions = questionsSnapshot.docs.map(doc => doc.data());\n            sections.push({\n              name: sectionDoc.id,\n              questions\n            });\n          }\n          subtopics.push({\n            name: subtopicDoc.id,\n            sections\n          });\n        }\n        topics.push({\n          name: topicDoc.id,\n          subtopics\n        });\n      }\n      layers.push({\n        name: layerDoc.id,\n        topics\n      });\n    }\n    return {\n      layers\n    };\n  };\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 21\n  }, this);\n  const layer = data.layers[currentLayerIndex];\n  const topic = layer.topics[currentTopicIndex];\n  const subtopic = topic.subtopics[currentSubtopicIndex];\n  const section = subtopic.sections[currentSectionIndex];\n  const handleResponseChange = (questionName, answer) => {\n    setResponses(prevResponses => ({\n      ...prevResponses,\n      [questionName]: answer\n    }));\n  };\n  const handleNext = () => {\n    if (currentSectionIndex < subtopic.sections.length - 1) {\n      setSectionIndex(currentSectionIndex + 1); // Move to next section\n    } else if (currentSubtopicIndex < topic.subtopics.length - 1) {\n      setSectionIndex(0);\n      setSubtopicIndex(currentSubtopicIndex + 1);\n    } else if (currentTopicIndex < layer.topics.length - 1) {\n      setSubtopicIndex(0);\n      setTopicIndex(currentTopicIndex + 1);\n    } else if (currentLayerIndex < data.layers.length - 1) {\n      setLayerIndex(currentLayerIndex + 1);\n      setTopicIndex(0);\n      setSubtopicIndex(0);\n    } else {\n      console.log(\"Questionnaire completed\");\n      navigate(\"/score\", {\n        state: {\n          responses,\n          jsonData: data\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Layer: \", layer.lname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Topic: \", topic.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Subtopic: \", subtopic.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Section: \", section.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body\",\n      children: section.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponseChange(question.name, \"Yes\"),\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponseChange(question.name, \"No\"),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionnairePage, \"Adn2lE7OZhufgN4sAyTaTyXs6xY=\", false, function () {\n  return [useNavigate];\n});\n_c = QuestionnairePage;\nexport default QuestionnairePage;\nvar _c;\n$RefreshReg$(_c, \"QuestionnairePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","db","collection","doc","setDoc","getDocs","jsxDEV","_jsxDEV","QuestionnairePage","_s","data","setData","currentLayerIndex","setLayerIndex","currentTopicIndex","setTopicIndex","currentSubtopicIndex","setSubtopicIndex","currentSectionIndex","setSectionIndex","responses","setResponses","navigate","fetchDataFromFirestore","layersCollection","layersSnapshot","empty","console","log","fetch","then","response","json","jsonData","addDataToFirestore","firestoreData","getFirestoreData","error","layers","layer","layerRef","lname","name","topic","topics","topicRef","tname","subtopic","subtopics","sanitizedSubtopicName","stname","replace","subtopicRef","section","sections","sectionRef","sname","question","questions","questionRef","info","good_point","scope_for_improvement","mandatory","tags","layerDoc","docs","topicsSnapshot","ref","topicDoc","subtopicsSnapshot","subtopicDoc","sectionsSnapshot","sectionDoc","questionsSnapshot","map","push","id","children","fileName","_jsxFileName","lineNumber","columnNumber","handleResponseChange","questionName","answer","prevResponses","handleNext","length","state","className","index","onClick","_c","$RefreshReg$"],"sources":["/Users/balajibabasahebsankapal/Desktop/Risk/web-app/src/components/Questionnaire.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Questionnaire.css\";\nimport { db } from \"../firebase/firebase.js\"; // Import Firestore instance\nimport { collection, doc, setDoc, getDocs } from \"firebase/firestore\";\n\nfunction QuestionnairePage() {\n  const [data, setData] = useState(null);\n  const [currentLayerIndex, setLayerIndex] = useState(0);\n  const [currentTopicIndex, setTopicIndex] = useState(0);\n  const [currentSubtopicIndex, setSubtopicIndex] = useState(0);\n  const [currentSectionIndex, setSectionIndex] = useState(0); // New state for section\n  const [responses, setResponses] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchDataFromFirestore = async () => {\n      try {\n        const layersCollection = collection(db, \"layers\");\n        const layersSnapshot = await getDocs(layersCollection);\n\n        if (layersSnapshot.empty) {\n          console.log(\"Firestore is empty. Adding data...\");\n          // Load JSON and upload it if Firestore is empty\n          fetch(\"/questionnaireData.json\")\n            .then((response) => response.json())\n            .then(async (jsonData) => {\n              await addDataToFirestore(jsonData); // Add JSON to Firestore\n              setData(jsonData); // Set state with the loaded data\n            });\n        } else {\n          console.log(\"Fetching data from Firestore...\");\n          const firestoreData = await getFirestoreData(layersSnapshot);\n          setData(firestoreData); // Set state with Firestore data\n        }\n      } catch (error) {\n        console.error(\"Error fetching data from Firestore:\", error);\n      }\n    };\n\n    fetchDataFromFirestore();\n  }, []);\n\n  // Function to add data to Firestore\n  const addDataToFirestore = async (jsonData) => {\n    try {\n      const layers = jsonData.layers;\n  \n      // Step 1: Create all layers first\n      for (const layer of layers) {\n        const layerRef = doc(collection(db, \"layers\"), layer.lname);\n        await setDoc(layerRef, { name: layer.lname });\n  \n        // Step 2: Create topics under each layer\n        for (const topic of layer.topics) {\n          const topicRef = doc(collection(layerRef, \"topics\"), topic.tname);\n          await setDoc(topicRef, { name: topic.tname });\n  \n          // Step 3: Create subtopics under each topic\n          for (const subtopic of topic.subtopics) {\n            const sanitizedSubtopicName = subtopic.stname.replace(/[^a-zA-Z0-9]/g, '_');\n            const subtopicRef = doc(collection(topicRef, \"subtopics\"), sanitizedSubtopicName);\n            await setDoc(subtopicRef, { name: subtopic.stname });\n  \n            // Step 4: Create sections under each subtopic\n            for (const section of subtopic.sections) {\n              const sectionRef = doc(collection(subtopicRef, \"sections\"), section.sname);\n              await setDoc(sectionRef, { name: section.sname });\n  \n              // Step 5: Create questions under each section\n              for (const question of section.questions) {\n                const questionRef = doc(\n                  collection(sectionRef, \"questions\"),\n                  question.name\n                );\n                await setDoc(questionRef, {\n                  name: question.name,\n                  info: question.info,\n                  good_point: question.good_point,\n                  scope_for_improvement: question.scope_for_improvement,\n                  mandatory: question.mandatory,\n                  tags: question.tags,\n                });\n              }\n            }\n          }\n        }\n      }\n  \n      console.log(\"Data successfully added to Firestore!\");\n    } catch (error) {\n      console.error(\"Error adding data to Firestore:\", error);\n    }\n  };\n  \n\n  // Function to fetch data from Firestore and build a JSON-like structure\n  const getFirestoreData = async (layersSnapshot) => {\n    const layers = [];\n    for (const layerDoc of layersSnapshot.docs) {\n      const topicsSnapshot = await getDocs(collection(layerDoc.ref, \"topics\"));\n      const topics = [];\n      for (const topicDoc of topicsSnapshot.docs) {\n        const subtopicsSnapshot = await getDocs(\n          collection(topicDoc.ref, \"subtopics\")\n        );\n        const subtopics = [];\n        for (const subtopicDoc of subtopicsSnapshot.docs) {\n          const sectionsSnapshot = await getDocs(\n            collection(subtopicDoc.ref, \"sections\")\n          );\n          const sections = [];\n          for (const sectionDoc of sectionsSnapshot.docs) {\n            const questionsSnapshot = await getDocs(\n              collection(sectionDoc.ref, \"questions\")\n            );\n            const questions = questionsSnapshot.docs.map((doc) => doc.data());\n            sections.push({ name: sectionDoc.id, questions });\n          }\n          subtopics.push({ name: subtopicDoc.id, sections });\n        }\n        topics.push({ name: topicDoc.id, subtopics });\n      }\n      layers.push({ name: layerDoc.id, topics });\n    }\n    return { layers };\n  };\n\n  if (!data) return <div>Loading...</div>;\n\n  const layer = data.layers[currentLayerIndex];\n  const topic = layer.topics[currentTopicIndex];\n  const subtopic = topic.subtopics[currentSubtopicIndex];\n  const section = subtopic.sections[currentSectionIndex];\n\n  const handleResponseChange = (questionName, answer) => {\n    setResponses((prevResponses) => ({\n      ...prevResponses,\n      [questionName]: answer,\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentSectionIndex < subtopic.sections.length - 1) {\n      setSectionIndex(currentSectionIndex + 1); // Move to next section\n    } else if (currentSubtopicIndex < topic.subtopics.length - 1) {\n      setSectionIndex(0);\n      setSubtopicIndex(currentSubtopicIndex + 1);\n    } else if (currentTopicIndex < layer.topics.length - 1) {\n      setSubtopicIndex(0);\n      setTopicIndex(currentTopicIndex + 1);\n    } else if (currentLayerIndex < data.layers.length - 1) {\n      setLayerIndex(currentLayerIndex + 1);\n      setTopicIndex(0);\n      setSubtopicIndex(0);\n    } else {\n      console.log(\"Questionnaire completed\");\n      navigate(\"/score\", { state: { responses, jsonData: data } });\n    }\n  };\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-header\">\n        <h2>Layer: {layer.lname}</h2>\n        <h3>Topic: {topic.name}</h3>\n        <h4>Subtopic: {subtopic.name}</h4>\n        <h5>Section: {section.name}</h5>\n      </div>\n\n      <div className=\"panel-body\">\n        {section.questions.map((question, index) => (\n          <div key={index} className=\"question-panel\">\n            <p><strong>{question.name}</strong></p>\n            <div className=\"buttons\">\n              <button onClick={() => handleResponseChange(question.name, \"Yes\")}>\n                Yes\n              </button>\n              <button onClick={() => handleResponseChange(question.name, \"No\")}>\n                No\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button className=\"next-button\" onClick={handleNext}>\n        Next\n      </button>\n    </div>\n  );\n}\n\nexport default QuestionnairePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}